-- Create Database
CREATE DATABASE SkinCareManagementDB;
GO

USE SkinCareManagementDB;
GO

-- Create Tables

-- Roles table (needs to be first due to foreign key references)
CREATE TABLE Roles (
    RoleId INT IDENTITY(1,1) PRIMARY KEY,
    RoleName NVARCHAR(50) NOT NULL UNIQUE
);
GO

-- Users table
CREATE TABLE Users (
    UserId INT IDENTITY(1,1) PRIMARY KEY,
    RoleId INT NOT NULL,
    Username NVARCHAR(50) NOT NULL UNIQUE,
    Password NVARCHAR(255) NOT NULL,
    PasswordHash NVARCHAR(255) NOT NULL,
    FullName NVARCHAR(100),
    Email NVARCHAR(100),
    PhoneNumber NVARCHAR(15),
    Address NVARCHAR(255),
    IsVerification BIT NOT NULL DEFAULT 0,
    IsBanned BIT NOT NULL DEFAULT 0,
    ExpirationToken NVARCHAR(MAX),
    VerificationToken NVARCHAR(MAX),
    CreatedAt DATETIME DEFAULT GETDATE(),
    CONSTRAINT FK__Users__RoleID__567890 FOREIGN KEY (RoleId) 
        REFERENCES Roles(RoleId) ON DELETE NO ACTION
);
GO

-- Brands table
CREATE TABLE Brands (
    BrandId INT IDENTITY(1,1) PRIMARY KEY,
    BrandName NVARCHAR(100) NOT NULL,
    Description NVARCHAR(MAX)
);
GO

-- Categories table
CREATE TABLE Categories (
    CategoryId INT IDENTITY(1,1) PRIMARY KEY,
    CategoryName NVARCHAR(100) NOT NULL,
    Description NVARCHAR(MAX)
);
GO

-- Volumes table
CREATE TABLE Volumes (
    VolumeId INT IDENTITY(1,1) PRIMARY KEY,
    Value NVARCHAR(50) NOT NULL
);
GO

-- Skintypes table
CREATE TABLE Skintypes (
    SkinTypeId INT IDENTITY(1,1) PRIMARY KEY,
    SkinTypeName NVARCHAR(50) NOT NULL UNIQUE
);
GO

-- Products table
CREATE TABLE Products (
    ProductId INT IDENTITY(1,1) PRIMARY KEY,
    ProductName NVARCHAR(100) NOT NULL,
    Description NVARCHAR(MAX),
    Price DECIMAL(18,2) NOT NULL,
    Stock INT DEFAULT 0,
    MainIngredients NVARCHAR(MAX),
    BrandId INT,
    VolumeId INT,
    SkinTypeId INT,
    CategoryId INT,
    CreatedAt DATETIME DEFAULT GETDATE(),
    CONSTRAINT FK__Products__BrandI__123456 FOREIGN KEY (BrandId) 
        REFERENCES Brands(BrandId),
    CONSTRAINT FK__Products__VolumeI__345678 FOREIGN KEY (VolumeId) 
        REFERENCES Volumes(VolumeId),
    CONSTRAINT FK__Products__SkinTy__30F848ED FOREIGN KEY (SkinTypeId) 
        REFERENCES Skintypes(SkinTypeId),
    CONSTRAINT FK__Products__CategoryI__234567 FOREIGN KEY (CategoryId) 
        REFERENCES Categories(CategoryId)
);
GO

-- ProductImages table
CREATE TABLE ProductImages (
    ImageId INT IDENTITY(1,1) PRIMARY KEY,
    ProductId INT NOT NULL,
    ImageUrl NVARCHAR(MAX) NOT NULL,
    IsMainImage BIT NOT NULL DEFAULT 0,
    CONSTRAINT FK__ProductImages__ProductID__456789 FOREIGN KEY (ProductId) 
        REFERENCES Products(ProductId) ON DELETE CASCADE
);
GO

-- SkinRoutines table
CREATE TABLE SkinRoutines (
    RoutineId INT IDENTITY(1,1) PRIMARY KEY,
    SkinTypeId INT NOT NULL,
    RoutineStep NVARCHAR(255) NOT NULL,
    CONSTRAINT FK__SkinRouti__SkinT__34C8D9D1 FOREIGN KEY (SkinTypeId) 
        REFERENCES Skintypes(SkinTypeId) ON DELETE NO ACTION
);
GO

-- Orders table
CREATE TABLE Orders (
    OrderId INT IDENTITY(1,1) PRIMARY KEY,
    UserId INT NOT NULL,
    OrderDate DATETIME DEFAULT GETDATE(),
    TotalAmount DECIMAL(18,2),
    Status NVARCHAR(50) DEFAULT 'Pending',
    PaymentMethod NVARCHAR(50),
    CONSTRAINT FK__Orders__UserID__890123 FOREIGN KEY (UserId) 
        REFERENCES Users(UserId) ON DELETE NO ACTION
);
GO

-- OrderDetails table
CREATE TABLE OrderDetails (
    OrderDetailId INT IDENTITY(1,1) PRIMARY KEY,
    OrderId INT NOT NULL,
    ProductId INT NOT NULL,
    Quantity INT NOT NULL,
    Price DECIMAL(18,2) NOT NULL,
    CONSTRAINT FK__OrderDetails__OrderID__901234 FOREIGN KEY (OrderId) 
        REFERENCES Orders(OrderId) ON DELETE CASCADE,
    CONSTRAINT FK__OrderDetails__ProductID__012345 FOREIGN KEY (ProductId) 
        REFERENCES Products(ProductId) ON DELETE NO ACTION
);
GO

-- Payments table
CREATE TABLE Payments (
    PaymentId INT IDENTITY(1,1) PRIMARY KEY,
    OrderId INT NOT NULL,
    PaymentDate DATETIME DEFAULT GETDATE(),
    Amount DECIMAL(18,2),
    PaymentStatus NVARCHAR(50) DEFAULT 'Pending',
    CONSTRAINT FK__Payments__OrderID__123456 FOREIGN KEY (OrderId) 
        REFERENCES Orders(OrderId) ON DELETE CASCADE
);
GO

-- PaymentHistory table
CREATE TABLE PaymentHistory (
    HistoryId INT IDENTITY(1,1) PRIMARY KEY,
    PaymentId INT NOT NULL,
    PaymentDate DATETIME DEFAULT GETDATE(),
    Amount DECIMAL(18,2) NOT NULL,
    PaymentStatus NVARCHAR(50) NOT NULL,
    CONSTRAINT FK__PaymentHistory__PaymentID__234567 FOREIGN KEY (PaymentId) 
        REFERENCES Payments(PaymentId) ON DELETE CASCADE
);
GO

-- Feedbacks table
CREATE TABLE Feedbacks (
    FeedbackId INT IDENTITY(1,1) PRIMARY KEY,
    ProductId INT NOT NULL,
    UserId INT NOT NULL,
    Rating INT,
    Comment NVARCHAR(MAX),
    CreatedAt DATETIME DEFAULT GETDATE(),
    CONSTRAINT FK__Feedback__ProductID__678901 FOREIGN KEY (ProductId) 
        REFERENCES Products(ProductId) ON DELETE CASCADE,
    CONSTRAINT FK__Feedback__UserID__789012 FOREIGN KEY (UserId) 
        REFERENCES Users(UserId) ON DELETE CASCADE
);
GO

-- Promotions table
CREATE TABLE Promotions (
    PromotionId INT IDENTITY(1,1) PRIMARY KEY,
    PromotionName NVARCHAR(100),
    DiscountPercentage DECIMAL(18,2),
    StartDate DATETIME,
    EndDate DATETIME
);
GO

-- DashboardReports table
CREATE TABLE DashboardReports (
    ReportId INT IDENTITY(1,1) PRIMARY KEY,
    TotalSales DECIMAL(18,2) NOT NULL,
    SalesGrowthRate DECIMAL(18,2) NOT NULL,
    TotalOrders INT NOT NULL,
    OrdersGrowthRate DECIMAL(18,2) NOT NULL,
    ActiveUsers INT NOT NULL,
    UserGrowthRate DECIMAL(18,2) NOT NULL,
    OverallGrowthRate DECIMAL(18,2) NOT NULL,
    RevenueData NVARCHAR(MAX),
    OrdersData NVARCHAR(MAX),
    LastUpdated DATETIME NOT NULL DEFAULT GETDATE(),
    TimeRange NVARCHAR(50)
);
GO

-- Insert sample data
SET IDENTITY_INSERT Roles ON;
INSERT INTO Roles (RoleId, RoleName) VALUES 
(1, 'Admin'),
(2, 'Staff'),
(3, 'Customer'),
(4, 'Guest');
SET IDENTITY_INSERT Roles OFF;
GO

-- Insert sample Users
INSERT INTO Users (RoleId, Username, Password, PasswordHash, FullName, Email, PhoneNumber, Address, IsVerification, IsBanned) VALUES
(1, 'admin', 'admin123', 'hashedpassword1', 'Admin User', 'admin@example.com', '1234567890', '123 Admin St', 1, 0),
(2, 'staff', 'staff123', 'hashedpassword2', 'Staff User', 'staff@example.com', '2345678901', '456 Staff Ave', 1, 0),
(3, 'customer', 'customer123', 'hashedpassword3', 'Customer User', 'customer@example.com', '3456789012', '789 Customer Rd', 1, 0);
GO

-- Insert sample Brands
SET IDENTITY_INSERT Brands ON;
INSERT INTO Brands (BrandId, BrandName, Description) VALUES
(1, 'Neutrogena', 'Quality skincare products for all skin types'),
(2, 'CeraVe', 'Developed with dermatologists'),
(3, 'La Roche-Posay', 'Recommended by dermatologists worldwide');
SET IDENTITY_INSERT Brands OFF;
GO

-- Insert sample Categories
SET IDENTITY_INSERT Categories ON;
INSERT INTO Categories (CategoryId, CategoryName, Description) VALUES
(1, 'Cleansers', 'Products to clean your skin'),
(2, 'Moisturizers', 'Products to hydrate your skin'),
(3, 'Sunscreens', 'Products to protect your skin from UV rays');
SET IDENTITY_INSERT Categories OFF;
GO

-- Insert sample Volumes
SET IDENTITY_INSERT Volumes ON;
INSERT INTO Volumes (VolumeId, Value) VALUES
(1, '30ml'),
(2, '50ml'),
(3, '100ml'),
(4, '200ml');
SET IDENTITY_INSERT Volumes OFF;
GO

-- Insert sample Skintypes
SET IDENTITY_INSERT Skintypes ON;
INSERT INTO Skintypes (SkinTypeId, SkinTypeName) VALUES
(1, 'Oily'),
(2, 'Dry'),
(3, 'Combination'),
(4, 'Sensitive');
SET IDENTITY_INSERT Skintypes OFF;
GO

-- Insert Products
SET IDENTITY_INSERT Products ON;
INSERT INTO Products (ProductId, ProductName, Description, Price, Stock, MainIngredients, BrandId, VolumeId, SkinTypeId, CategoryId, CreatedAt) VALUES
(1, 'Gentle Cleanser', 'Daily gentle cleansing', 29.99, 100, 'Aloe Vera, Chamomile', 1, 1, 1, 1, GETDATE()),
(2, 'Hydrating Cream', 'Deep moisturizing cream', 39.99, 50, 'Hyaluronic Acid, Ceramides', 2, 2, 2, 2, GETDATE()),
(3, 'Vitamin C Serum', 'Brightening serum', 49.99, 75, 'Vitamin C, Ferulic Acid', 3, 3, 3, 3, GETDATE());
SET IDENTITY_INSERT Products OFF;
GO

-- Insert ProductImages
SET IDENTITY_INSERT ProductImages ON;
INSERT INTO ProductImages (ImageId, ProductId, ImageUrl, IsMainImage) VALUES
(1, 1, 'https://example.com/cleanser.jpg', 1),
(2, 2, 'https://example.com/cream.jpg', 1),
(3, 3, 'https://example.com/serum.jpg', 1);
SET IDENTITY_INSERT ProductImages OFF;
GO

-- Insert SkinRoutines
SET IDENTITY_INSERT SkinRoutines ON;
INSERT INTO SkinRoutines (RoutineId, SkinTypeId, RoutineStep) VALUES
(1, 1, 'Cleanse with gentle cleanser'),
(2, 1, 'Apply oil-free moisturizer'),
(3, 2, 'Cleanse with creamy cleanser'),
(4, 2, 'Apply rich moisturizer');
SET IDENTITY_INSERT SkinRoutines OFF;
GO

-- Insert Orders
SET IDENTITY_INSERT Orders ON;
INSERT INTO Orders (OrderId, UserId, OrderDate, TotalAmount, Status, PaymentMethod) VALUES
(1, 2, DATEADD(day, -5, GETDATE()), 150.00, 'Completed', 'Credit Card'),
(2, 2, DATEADD(day, -3, GETDATE()), 200.00, 'Processing', 'PayPal'),
(3, 2, DATEADD(day, -1, GETDATE()), 175.00, 'Pending', 'Bank Transfer');
SET IDENTITY_INSERT Orders OFF;
GO

-- Insert OrderDetails
SET IDENTITY_INSERT OrderDetails ON;
INSERT INTO OrderDetails (OrderDetailId, OrderId, ProductId, Quantity, Price) VALUES
(1, 1, 1, 2, 29.99),
(2, 1, 2, 1, 39.99),
(3, 2, 3, 2, 49.99);
SET IDENTITY_INSERT OrderDetails OFF;
GO

-- Insert Payments
SET IDENTITY_INSERT Payments ON;
INSERT INTO Payments (PaymentId, OrderId, PaymentDate, Amount, PaymentStatus) VALUES
(1, 1, DATEADD(day, -5, GETDATE()), 150.00, 'Completed'),
(2, 2, DATEADD(day, -3, GETDATE()), 200.00, 'Processing'),
(3, 3, DATEADD(day, -1, GETDATE()), 175.00, 'Pending');
SET IDENTITY_INSERT Payments OFF;
GO

-- Insert PaymentHistory
SET IDENTITY_INSERT PaymentHistory ON;
INSERT INTO PaymentHistory (HistoryId, PaymentId, PaymentDate, Amount, PaymentStatus) VALUES
(1, 1, DATEADD(day, -5, GETDATE()), 150.00, 'Completed'),
(2, 2, DATEADD(day, -3, GETDATE()), 200.00, 'Processing'),
(3, 3, DATEADD(day, -1, GETDATE()), 175.00, 'Pending');
SET IDENTITY_INSERT PaymentHistory OFF;
GO

-- Insert Feedbacks
SET IDENTITY_INSERT Feedbacks ON;
INSERT INTO Feedbacks (FeedbackId, ProductId, UserId, Rating, Comment, CreatedAt) VALUES
(1, 1, 2, 5, 'Great cleanser!', GETDATE()),
(2, 2, 2, 4, 'Good moisturizer', GETDATE()),
(3, 3, 2, 5, 'Excellent serum', GETDATE());
SET IDENTITY_INSERT Feedbacks OFF;
GO

-- Insert Promotions
SET IDENTITY_INSERT Promotions ON;
INSERT INTO Promotions (PromotionId, PromotionName, DiscountPercentage, StartDate, EndDate) VALUES
(1, 'Summer Sale', 15.00, DATEADD(day, -10, GETDATE()), DATEADD(day, 20, GETDATE())),
(2, 'New Customer', 10.00, DATEADD(day, -5, GETDATE()), DATEADD(day, 25, GETDATE())),
(3, 'Holiday Special', 20.00, DATEADD(day, 10, GETDATE()), DATEADD(day, 40, GETDATE()));
SET IDENTITY_INSERT Promotions OFF;
GO

-- Insert DashboardReports
SET IDENTITY_INSERT DashboardReports ON;
INSERT INTO DashboardReports (
    ReportId, TotalSales, SalesGrowthRate, TotalOrders, OrdersGrowthRate,
    ActiveUsers, UserGrowthRate, OverallGrowthRate, RevenueData,
    OrdersData, LastUpdated, TimeRange
) VALUES
(1, 5000.00, 15.5, 50, 10.2, 100, 5.5, 10.4, '{"daily":[300,450,500]}', '{"daily":[5,7,8]}', GETDATE(), 'Last 7 days'),
(2, 15000.00, 12.3, 150, 8.7, 300, 4.2, 8.4, '{"daily":[900,1200,1500]}', '{"daily":[15,20,25]}', DATEADD(day, -1, GETDATE()), 'Last 30 days'),
(3, 45000.00, 9.8, 450, 6.5, 900, 3.1, 6.5, '{"daily":[2700,3600,4500]}', '{"daily":[45,60,75]}', DATEADD(day, -2, GETDATE()), 'Last 90 days');
SET IDENTITY_INSERT DashboardReports OFF;
GO